<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tonyc.github.io</title>
    <link>https://tonyc.github.io/</link>
    <description>Recent content on tonyc.github.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 21 Jan 2019 19:11:51 -0600</lastBuildDate>
    
	<atom:link href="https://tonyc.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Managing External Commands in Elixir with Ports</title>
      <link>https://tonyc.github.io/posts/managing-external-commands-in-elixir-with-ports/</link>
      <pubDate>Mon, 21 Jan 2019 19:11:51 -0600</pubDate>
      
      <guid>https://tonyc.github.io/posts/managing-external-commands-in-elixir-with-ports/</guid>
      <description>Background Elixir and OTP excel at asynchronous and long-running tasks, and likewise, they seem like a great fit for interfacing with the non-Elixir world, particularly being able to shell-out and monitor a long running external OS process.
In the Ruby world, we often reach for tools like Sidekiq or Resque to run these commands asynchronously, outside of the normal HTTP request/response cycle that we&amp;rsquo;re used to when we usually build an app or API with Rails.</description>
    </item>
    
    <item>
      <title>About Me</title>
      <link>https://tonyc.github.io/pages/about/</link>
      <pubDate>Sun, 20 Jan 2019 09:36:33 -0600</pubDate>
      
      <guid>https://tonyc.github.io/pages/about/</guid>
      <description>I&amp;rsquo;m a software engineer based out of the Minneapolis/Saint Paul, Minnesota area.
I run a small boutique software development shop called Halogen Labs, where I work with startsup &amp;amp; small companies to architect, design, and build web applications and APIs to solve their business problems or build products.
My interests include Elixir, Ruby, GIS &amp;amp; geospatial data, and amateur radio.</description>
    </item>
    
  </channel>
</rss>